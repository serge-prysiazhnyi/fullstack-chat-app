name: Deploy to DigitalOcean

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          yarn install

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-app:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-app

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}

      - name: Add DigitalOcean Droplet to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to DigitalOcean Droplet
        run: |
          sshpass -p "${{ secrets.DIGITALOCEAN_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          docker pull "${{ secrets.DOCKER_USERNAME }}/chat-app:latest"
          docker stop chat-app || true
          docker rm chat-app || true
          docker run -d --name chat-app -p 8080:80 "${{ secrets.DOCKER_USERNAME }}/chat-app:latest"
          EOF
